{"version":3,"sources":["webpack:///./src/components/ContentfulRichText.js","webpack:///./src/components/Recipe.js","webpack:///./src/templates/meal.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/data/languages.js","webpack:///./src/data/messages/en-NZ.js","webpack:///./src/data/messages/nl-NL.js","webpack:///./src/components/LanguageSelector.js","webpack:///./src/components/layout.js"],"names":["options","renderMark","renderNode","ContentfulRichText","_ref","node","documentToReactComponents","json","Wrapper","styled","div","withConfig","displayName","componentId","py","mobile","tablet","desktop","Title","h2","mb","SubHeading","h3","breakpoint","_templateObject","Instructions","_templateObject2","Ingredients","_templateObject3","Recipe","recipe","showTitle","react_default","a","createElement","Fragment","title","components_ContentfulRichText","instructions","ingredients","HeaderWrapper","Header","h1","SubHeader","Content","p","meal_templateObject","meal_templateObject2","meal_templateObject3","ShortDescription","pb","pageQuery","Meal","data","location","meal","contentfulMeal","updatedAt","shortDescription","recipes","node_locale","siteTitle","site","siteMetadata","layout","Helmet_default","formatDateDistanceToNow","Date","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","map","components_Recipe","key","id","length","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","propTypes","shape","pathname","formatDistanceToNow","messages","en-NZ","nl-NL","formatLocales","getMessage","locale","message","languages","label","defaultLocale","date","LAST_UPDATED","AGO","VIEW","LANGUAGE","Selector","SelectorLabel","span","Items","Item","LanguageSelector","currentLocale","_3175702868","_ref2","gatsby_browser_entry","to","Container","Navigation","nav","NavigationItem","sizes","phone","landscape","mediaQueries","keys","reduce","accumulator","current","css","apply","arguments","theme","Layout","children","split","styled_components_browser_esm","components_LanguageSelector"],"mappings":"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","file":"component---src-templates-meal-js-6b9a21405263a4acce34.js","sourcesContent":["import React from 'react';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\n\nconst options = {\n  renderMark: {},\n  renderNode: {},\n}\n\nconst ContentfulRichText = ({node}) => {\n  return documentToReactComponents(node.json, options)\n}\n\nexport default ContentfulRichText\n","import React from 'react'\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\nimport { py, mb } from 'styled-components-spacing'\nimport ContentfulRichText from './ContentfulRichText'\n \nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  border-bottom: 1px solid #000;\n  ${py({ mobile: 3, tablet: 4, desktop: 4 })}\n  flex-wrap: wrap;\n`\n\nconst Title = styled.h2`\n  width: 100%;\n  margin: 0;\n  ${mb({ mobile: 3, tablet: 3, desktop: 2 })}\n  order: 1;\n`\n\nconst SubHeading = styled.h3`\n  margin: 0;\n  ${breakpoint('desktop')`\n    display: none;\n  `}\n`\n\nconst Instructions = styled.div`\n  width: 100%;\n  order: 3;\n\n  ${breakpoint('desktop')`\n    width: 60%;\n    order: 2;\n  `}\n`\n\nconst Ingredients = styled.div`\n  width: 100%;\n  order: 2;\n  \n  ${breakpoint('desktop')`\n    width: 40%;\n    order: 3;\n  `}\n`\n\n  \nconst Recipe = ({ recipe, showTitle }) => (\n  <>\n    <Wrapper>\n      {showTitle && <Title>{recipe.title}</Title>}\n      <Instructions>\n        <SubHeading>Instructions</SubHeading>\n        <ContentfulRichText node={recipe.instructions} />\n      </Instructions>\n      <Ingredients>\n        <SubHeading>Ingredients</SubHeading>\n        <ContentfulRichText node={recipe.ingredients} />\n      </Ingredients>\n    </Wrapper>\n  </>\n)\n\n\nexport default Recipe;\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\nimport { p, pb, mb } from 'styled-components-spacing'\nimport { formatDateDistanceToNow } from '../data/languages'\n\nimport Layout from '../components/layout'\nimport Recipe from '../components/Recipe'\n\n\nconst HeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  ${mb({ mobile: 2, tablet: 3, desktop: 3 })};\n`\n\nconst Header = styled.h1`\n  margin: 0;\n`\n\nconst SubHeader = styled.div`\n  margin: 0;\n  font-size: 0.8em;\n  color: #777;\n`\n\nconst Content = styled.div`\n  background-color: white;\n  ${p({ mobile: 3, tablet: 4, desktop: 5 })};\n  ${breakpoint('mobile')`\n    width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    width: 90%;\n  `}\n\n  ${breakpoint('desktop')`\n    width: 80%;\n  `}\n`\n\nconst ShortDescription = styled.div`\n  width: 100%;\n  color: #223;\n  ${pb({ mobile: 3, tablet: 4, desktop: 4 })};\n  border-bottom: 1px solid #000;\n`\n\nconst Meal = ({ data, location }) => {\n  const meal = data.contentfulMeal\n  const { title, updatedAt, shortDescription, recipes, node_locale } = meal\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} >\n      <Helmet title={`${meal.title} | ${siteTitle}`} />\n      <Content>\n        <HeaderWrapper>\n          <Header>{title}</Header>\n          <SubHeader>{formatDateDistanceToNow(node_locale, new Date(updatedAt))}</SubHeader>\n        </HeaderWrapper>\n\n        <ShortDescription\n          dangerouslySetInnerHTML={{\n            __html: shortDescription.childMarkdownRemark.html,\n          }}\n        />\n        {recipes && recipes.map(recipe => (\n          <Recipe\n            key={recipe.id}\n            showTitle={recipes.length > 1}\n            recipe={recipe}\n          />\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Meal\n\nexport const pageQuery = graphql`\n  query MealById($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulMeal(id: { eq: $id }) {\n      title\n      updatedAt\n      node_locale\n      shortDescription {\n        childMarkdownRemark {\n          html\n        }\n      }\n      recipes {\n        id\n        ingredients {\n          json\n        }\n        instructions {\n          json\n        }\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const formatDistanceToNow = require('date-fns/formatDistanceToNow').default;\n\nconst languages = [\n  {\n    locale: 'en-NZ',\n    label: '🇳🇿 English',\n  },\n  {\n    locale: 'nl-NL',\n    label: '🇳🇱 Nederlands',\n  }\n]\n\nconst defaultLocale = 'en-NZ'\n\nconst messages = {\n  'en-NZ': require('./messages/en-NZ'),\n  'nl-NL': require('./messages/nl-NL'),\n}\n\nconst formatLocales = {\n  'en-NZ': require('date-fns/locale/en-GB'),\n  'nl-NL': require('date-fns/locale/nl'),\n}\n\nconst getMessage = locale => message => messages[locale][message];  \nconst formatDateDistanceToNow = (locale, date)  => {\n  const messages = getMessage(locale);\n  return `${messages('LAST_UPDATED')} ${formatDistanceToNow(date, { locale: formatLocales[locale] })} ${messages('AGO')}`\n}\n\nmodule.exports = {\n  languages,\n  defaultLocale,\n  getMessage,\n  formatDateDistanceToNow,\n}\n","module.exports = {\n  'LAST_UPDATED': 'Last updated',\n  'AGO': 'ago',\n  'VIEW': ' View',\n  'LANGUAGE': 'Language',\n}\n","module.exports = {\n  'LAST_UPDATED': 'Laatst bijgewerkt',\n  'AGO': 'geleden',\n  'VIEW': 'Kijk',\n  'LANGUAGE': 'Taal',\n}\n","import React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { getMessage } from '../data/languages'\n\nconst Selector = styled.div`\n  font-size: 1rem;\n  width: 150px;\n  position: relative;\n  display: flex;\n  padding: 10px;\n  border: 1px solid #333;\n\n  & a {\n    text-decoration: none;\n  }\n\n  &:hover {\n    background-color: white;\n    border-top: 1px solid #333;\n    border-left: 1px solid #333;\n    border-right: 2px solid #000;\n  }\n`\n\nconst SelectorLabel = styled.span`\n  width: 100%;\n\n  &::after {\n    content: '\\\\25BC';\n    margin-left: 10px;\n    float: right;\n  }\n\n  ${Selector}:hover &::after {\n    content: '\\\\25B2';\n  }\n`\n\nconst Items = styled.div`\n  display: none;\n  position: absolute;\n  margin-top: 30px;\n  background-color: white;\n  width: 150px;\n  margin-left: -11px;\n  z-index: 99999;\n  border-top: 1px solid #EEE;\n  border-left: 1px solid #333;\n  border-right: 2px solid #000;\n  border-bottom: 2px solid #000;\n\n  ${Selector}:hover & {\n    display: block;\n  }\n`\n\nconst Item = styled.div`\n  padding: 10px;\n`\n\nconst LanguageSelector = ({ currentLocale }) => {\n  const messages = getMessage(currentLocale);\n  const data = useStaticQuery(graphql`\n    query LanguageQuery {\n      site {\n        siteMetadata {\n          languages {\n            locale\n            label\n          }\n        }\n      }\n    }\n  `) \n\n  return (\n    <Selector>\n      <SelectorLabel>{messages('LANGUAGE')}</SelectorLabel>\n      <Items>\n        {data.site.siteMetadata.languages.map(({label, locale}) =>(\n          <Item key={locale}>\n            <Link to={`/${locale}/`}>{label}</Link>\n          </Item>\n        ))}\n      </Items>\n    </Selector>\n  )\n}\n\nexport default LanguageSelector\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { css, ThemeProvider } from 'styled-components'\nimport styled from 'styled-components'\n\nimport LanguageSelector from './LanguageSelector'\n\nimport './base.css'\nimport 'normalize.css'\n\n  //max-width: 1180px;\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`\n\nconst Navigation = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  height: 20vh;\n  max-height: 100px;\n  font-size: 1.25rem;\n`\n\nconst NavigationItem = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin: 0 1em;\n`\n\nconst sizes = {\n  phone: [0, 480],\n  tablet: [481, 768],\n  landscape: [769, 1024],\n  desktop: [1025, 1280]\n}\n\nconst mediaQueries = Object.keys(sizes).reduce((accumulator, current) => {\n  accumulator[current] = (...args) => css`\n    @media (min-width: ${sizes[current][0]}px) and (max-width: ${sizes[current][1]}px) {\n      ${css(...args)};\n    }\n  `\n  return accumulator\n}, {})\n\nconst theme = {\n  ...mediaQueries \n}\n\nconst Layout = ({ location, children }) => {\n  const locale = location.pathname.split('/')[1];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <Navigation>\n          <NavigationItem>\n            <Link to={`/${locale}/`}>Home</Link>\n          </NavigationItem>\n          <NavigationItem>\n            <LanguageSelector currentLocale={locale} />\n          </NavigationItem>\n        </Navigation>\n        <Container>\n          {children}\n        </Container>\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}