{"version":3,"sources":["webpack:///./src/components/ContentfulRichText.tsx","webpack:///./src/components/Meal.tsx","webpack:///./src/components/Recipe.tsx","webpack:///./src/templates/meal.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/data/languages.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/LanguageSelector.tsx","webpack:///./src/components/Layout.tsx"],"names":["options","renderMark","renderNode","ContentfulRichText","doc","documentToReactComponents","HeaderWrapper","styled","div","withConfig","displayName","componentId","mb","mobile","tablet","desktop","breakpoint","_templateObject","Header","h1","_templateObject2","SubHeader","Description","pb","Meal","_ref","meal","children","title","updatedAt","description","node_locale","react_default","a","createElement","Fragment","formatDateDistanceToNow","Date","json","Wrapper","px","py","Title","h2","SubHeading","h3","Recipe_templateObject","Instructions","Recipe_templateObject2","Ingredients","_templateObject3","Recipe","recipe","showTitle","instructions","ingredients","Content","p","meal_templateObject","meal_templateObject2","meal_templateObject3","pageQuery","MealPage","data","pageContext","contentfulMeal","recipes","siteTitle","site","siteMetadata","Layout","Helmet_default","components_Meal","map","components_Recipe","key","id","length","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","getMessage","date_fns__WEBPACK_IMPORTED_MODULE_0__","_messages_en_NZ_json__WEBPACK_IMPORTED_MODULE_1__","_messages_nl_NL_json__WEBPACK_IMPORTED_MODULE_2__","messages","en-NZ","enNZ","nl-NL","nlNL","formatLocales","locale","message","date","msgs","formatDistanceToNow","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","propTypes","shape","pathname","Selector","SelectorLabel","span","Items","Item","LanguageSelector","currentLocale","currentUrl","_1512068511","languages","_ref2","label","gatsby_browser_entry","to","Container","Navigation","nav","NavigationItem","NavigationSpacer","theme","url","styled_components_browser_esm","components_LanguageSelector"],"mappings":"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","file":"component---src-templates-meal-tsx-3ad0933c233528593ea9.js","sourcesContent":["import { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport { Document } from '@contentful/rich-text-types'\n\nconst options = {\n  renderMark: {},\n  renderNode: {},\n}\n\nconst ContentfulRichText = (doc: Document) => {\n  return documentToReactComponents(doc, options)\n}\n\nexport default ContentfulRichText\n","import React, { ReactNode } from 'react'\n\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\nimport { mb, pb } from 'styled-components-spacing'\n\nimport { formatDateDistanceToNow } from '../data/languages'\nimport ContentfulRichText from './ContentfulRichText'\n\nconst HeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  ${mb({ mobile: 2, tablet: 3, desktop: 3 })};\n  ${breakpoint('tablet')`\n    flex-wrap: nowrap;\n  `}\n`\n\nconst Header = styled.h1`\n  margin: 0;\n  width: 100%;\n  ${breakpoint('tablet')`\n    width: auto;\n  `}\n`\n\nconst SubHeader = styled.div`\n  margin: 0;\n  font-size: 0.8em;\n  color: #777;\n  flex-shrink: 0;\n`\n\nconst Description = styled.div`\n  width: 100%;\n  color: #223;\n  ${pb({ mobile: 2, tablet: 3, desktop: 4 })};\n`\n\ninterface IProps {\n  meal: IMeal\n  children: ReactNode\n}\n\nconst Meal: React.FC<IProps> = ({ meal, children }) => {\n  const { title, updatedAt, description, node_locale } = meal\n\n  return (\n    <>\n      <HeaderWrapper>\n        <Header>{title}</Header>\n        <SubHeader>\n          {formatDateDistanceToNow(node_locale, new Date(updatedAt))}\n        </SubHeader>\n      </HeaderWrapper>\n\n      <Description>{ContentfulRichText(description.json)}</Description>\n      {children}\n    </>\n  )\n}\n\nexport default Meal\n","import React from 'react'\n\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\nimport { mb, px, py } from 'styled-components-spacing'\n\nimport ContentfulRichText from './ContentfulRichText'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  border: 2px outset #606060;\n  border-radius: 20px;\n  box-shadow: 2px 2px 2px 2px #D0D0D0;\n  ${px({ mobile: 3, tablet: 4, desktop: 4 })}\n  ${py({ mobile: 2, tablet: 3, desktop: 3 })}\n  ${mb({ mobile: 3, tablet: 3, desktop: 4 })}\n  flex-wrap: wrap;\n`\n\nconst Title = styled.h2`\n  width: 100%;\n  margin: 0;\n  ${mb({ mobile: 3, tablet: 3, desktop: 2 })}\n  order: 1;\n`\n\nconst SubHeading = styled.h3`\n  margin: 0;\n  ${breakpoint('desktop')`\n    display: none;\n  `}\n`\n\nconst Instructions = styled.div`\n  width: 100%;\n  order: 3;\n\n  ${breakpoint('desktop')`\n    width: 60%;\n    order: 2;\n  `}\n`\n\nconst Ingredients = styled.div`\n  width: 100%;\n  order: 2;\n\n  ${breakpoint('desktop')`\n    width: 40%;\n    order: 3;\n  `}\n`\n\ninterface IProps {\n  recipe: IRecipe\n  showTitle: boolean\n}\n\nconst Recipe: React.FC<IProps> = ({ recipe, showTitle }) => (\n  <>\n    <Wrapper>\n      {showTitle && <Title>{recipe.title}</Title>}\n      <Instructions>\n        <SubHeading>Instructions</SubHeading>\n        {ContentfulRichText(recipe.instructions.json)}\n      </Instructions>\n      <Ingredients>\n        <SubHeading>Ingredients</SubHeading>\n        {ContentfulRichText(recipe.ingredients.json)}\n      </Ingredients>\n    </Wrapper>\n  </>\n)\n\nexport default Recipe\n","import React from 'react'\n\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\nimport { p } from 'styled-components-spacing'\n\nimport Layout from '../components/Layout'\nimport Meal from '../components/Meal'\nimport Recipe from '../components/Recipe'\n\nconst Content = styled.div`\n  background-color: white;\n  ${p({ mobile: 3, tablet: 4, desktop: 5 })};\n  ${breakpoint('mobile')`\n    width: 100%;\n  `}\n\n  ${breakpoint('tablet')`\n    width: 90%;\n  `}\n\n  ${breakpoint('desktop')`\n    width: 80%;\n  `}\n`\n\ninterface IProps {\n  data: ISite & IContentfulMeal\n  pageContext: IPageContext\n}\n\nconst MealPage: React.FC<IProps> = ({ data, pageContext }) => {\n  const meal = data.contentfulMeal\n  const { title, recipes } = meal\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout pageContext={pageContext}>\n      <Helmet title={`${title} | ${siteTitle}`} />\n      <Content>\n        <Meal meal={meal}>\n          {recipes &&\n            recipes.map(recipe => (\n              <Recipe\n                key={recipe.id}\n                showTitle={recipes.length > 1}\n                recipe={recipe}\n              />\n            ))}\n        </Meal>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default MealPage\n\nexport const pageQuery = graphql`\n  query MealById($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulMeal(id: { eq: $id }) {\n      title\n      updatedAt\n      node_locale\n      description {\n        json\n      }\n      recipes {\n        id\n        ingredients {\n          json\n        }\n        instructions {\n          json\n        }\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { formatDistanceToNow, Locale } from 'date-fns'\n\nimport enNZ from './messages/en-NZ.json'\nimport nlNL from './messages/nl-NL.json'\n\nconst languages = [\n  {\n    label: '🇳🇿 English',\n    locale: 'en-NZ',\n  },\n  {\n    label: '🇳🇱 Nederlands',\n    locale: 'nl-NL',\n  },\n]\n\nconst defaultLocale = 'en-NZ'\n\nconst messages: Record<string, Record<string, string>> = {\n  'en-NZ': enNZ as Record<string, string>,\n  'nl-NL': nlNL as Record<string, string>,\n}\n\nconst formatLocales: Record<string, Locale> = {\n  'en-NZ': require('date-fns/locale/en-GB'),\n  'nl-NL': require('date-fns/locale/nl'),\n}\n\nconst getMessage: (locale: string) => (message: string) => string = (\n  locale: string\n) => {\n  return (message: string): string => messages[locale][message]\n}\nconst formatDateDistanceToNow = (locale: string, date: Date) => {\n  const msgs = getMessage(locale)\n  return `${msgs('LAST_UPDATED')} ${formatDistanceToNow(date, {\n    locale: formatLocales[locale],\n  })} ${msgs('AGO')}`\n}\n\nexport { languages, defaultLocale, getMessage, formatDateDistanceToNow }\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { getMessage } from '../data/languages'\n\nconst Selector = styled.div`\n  font-size: 1rem;\n  width: 150px;\n  position: relative;\n  display: flex;\n  padding: 10px;\n  border: 1px solid #333;\n\n  & a {\n    text-decoration: none;\n  }\n\n  &:hover {\n    background-color: white;\n    border-top: 1px solid #333;\n    border-left: 1px solid #333;\n    border-right: 2px solid #000;\n  }\n`\n\nconst SelectorLabel = styled.span`\n  width: 100%;\n\n  &::after {\n    content: '\\\\25BC';\n    margin-left: 10px;\n    float: right;\n  }\n\n  ${Selector}:hover &::after {\n    content: '\\\\25B2';\n  }\n`\n\nconst Items = styled.div`\n  display: none;\n  position: absolute;\n  margin-top: 30px;\n  background-color: white;\n  width: 150px;\n  margin-left: -11px;\n  z-index: 99999;\n  border-top: 1px solid #eee;\n  border-left: 1px solid #333;\n  border-right: 2px solid #000;\n  border-bottom: 2px solid #000;\n\n  ${Selector}:hover & {\n    display: block;\n  }\n`\n\nconst Item = styled.div`\n  padding: 10px;\n`\n\ninterface IProps {\n  currentLocale: string\n  currentUrl: string\n}\n\nconst LanguageSelector: React.FC<IProps> = ({ currentLocale, currentUrl }) => {\n  const data = useStaticQuery(graphql`\n    query LanguageQuery {\n      site {\n        siteMetadata {\n          defaultLocale\n          languages {\n            locale\n            label\n          }\n        }\n      }\n    }\n  `) as ISite\n\n  const messages = getMessage(currentLocale)\n\n  return (\n    <Selector>\n      <SelectorLabel>{messages('LANGUAGE')}</SelectorLabel>\n      <Items>\n        {data.site.siteMetadata.languages.map(({ label, locale }) => (\n          <Item key={locale}>\n            <Link to={`/${locale}/${currentUrl}`}>{label}</Link>\n          </Item>\n        ))}\n      </Items>\n    </Selector>\n  )\n}\n\nexport default LanguageSelector\n","import React, { ReactNode } from 'react'\n\nimport { Link } from 'gatsby'\nimport styled, { ThemeProvider } from 'styled-components'\n\nimport { getMessage } from '../data/languages'\nimport LanguageSelector from './LanguageSelector'\n\nimport 'normalize.css'\nimport './base.css'\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`\n\nconst Navigation = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  height: 20vh;\n  max-height: 100px;\n  font-size: 1.25rem;\n`\n\nconst NavigationItem = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin: 0 1em;\n\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst NavigationSpacer = styled.div`\n  display: inline-flex;\n  width: 100%;\n`\n\nconst theme = {}\n\ninterface IProps {\n  pageContext: IPageContext\n  children: ReactNode\n}\n\nconst Layout: React.FC<IProps> = ({ pageContext, children }) => {\n  const { locale, url } = pageContext\n\n  const messages = getMessage(locale)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <Navigation>\n          <NavigationItem>\n            <Link to={`/${locale}/`}>{messages('HOME')}</Link>\n          </NavigationItem>\n          <NavigationItem>\n            <Link to={`/${locale}/inspiration`}>{messages('INSPIRATION')}</Link>\n          </NavigationItem>\n          <NavigationSpacer />\n          <NavigationItem>\n            <LanguageSelector currentLocale={locale} currentUrl={url} />\n          </NavigationItem>\n        </Navigation>\n        <Container>{children}</Container>\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}